{"version":3,"sources":["Canvas.js","App.js","index.js"],"names":["Canvas","useEffect","paper","setup","colors","createStarburst","center","color","Math","floor","random","length","i","ray","Path","Line","add","Point","rotate","strokeColor","strokeWidth","tween","opacity","createSpiral","path","radius","angle","vector","createRipple","ring","Circle","createFloatingShapes","shape","Rectangle","Size","fillColor","endPoint","multiply","subtract","position","rotation","onKeyDown","event","maxPoint","view","size","width","height","randomPoint","point","animations","randomAnimation","off","React","createElement","id","resize","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccafbb45.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport paper from 'paper';\nimport { Howl } from 'howler';\n\nconst Canvas = () => {\n  useEffect(() => {\n    paper.setup('myCanvas');\n\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8'];\n\n    const createStarburst = (center) => {\n      const numRays = 12;\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      for (let i = 0; i < numRays; i++) {\n        const ray = new paper.Path.Line(center, center.add(new paper.Point(100, 0)));\n        ray.rotate(i * (360 / numRays), center);\n        ray.strokeColor = color;\n        ray.strokeWidth = 4;\n        ray.tween({ length: 200, opacity: 0 }, 1000);\n      }\n    };\n\n    const createSpiral = (center) => {\n      const path = new paper.Path();\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      path.strokeColor = color;\n      path.strokeWidth = 2;\n      let radius = 0;\n      let angle = 0;\n      for (let i = 0; i < 200; i++) {\n        const vector = new paper.Point({ length: radius, angle: angle });\n        path.add(center.add(vector));\n        radius += 0.3;\n        angle += 10;\n      }\n      path.tween({ strokeWidth: 10, opacity: 0 }, 1000);\n    };\n\n    const createRipple = (center) => {\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      const numRings = 3;\n      for (let i = 0; i < numRings; i++) {\n        const ring = new paper.Path.Circle(center, 10);\n        ring.strokeColor = color;\n        ring.strokeWidth = 2;\n        ring.opacity = 0.7;\n        ring.tween({ radius: 100 + i * 50, opacity: 0 }, 1000 + i * 200);\n      }\n    };\n\n    const createFloatingShapes = (center) => {\n      const numShapes = 10;\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      for (let i = 0; i < numShapes; i++) {\n        const shape = Math.random() > 0.5\n          ? new paper.Path.Circle(center, 10)\n          : new paper.Path.Rectangle(center, new paper.Size(20, 20));\n        shape.fillColor = color;\n        shape.opacity = 0.7;\n        const endPoint = center.add(paper.Point.random().multiply(200).subtract(100));\n        shape.tween({ position: endPoint, rotation: 360 * Math.random(), opacity: 0 }, 1000 + Math.random() * 500);\n      }\n    };\n\n    const onKeyDown = (event) => {\n      const maxPoint = new paper.Point(paper.view.size.width, paper.view.size.height);\n      const randomPoint = paper.Point.random();\n      const point = maxPoint.multiply(randomPoint);\n      const animations = [createStarburst, createSpiral, createRipple, createFloatingShapes];\n      const randomAnimation = animations[Math.floor(Math.random() * animations.length)];\n      randomAnimation(point);\n    };\n\n    paper.view.onKeyDown = onKeyDown;\n\n    return () => {\n      paper.view.off('keydown', onKeyDown);\n    };\n  }, []);\n\n  return <canvas id=\"myCanvas\" resize=\"true\" />;\n};\n\nexport default Canvas;\n","///////////////////////\n// Welcome to Cursor //\n///////////////////////\n\n/*\nStep 1: Try generating a react component that lets you play tictactoe with Cmd+K or Ctrl+K on a new line.\n  - Then integrate it into the code below and run with npm start\n\nStep 2: Try highlighting all the code with your mouse, then hit Cmd+k or Ctrl+K. \n  - Instruct it to change the game in some way (e.g. add inline styles, add a start screen, make it 4x4 instead of 3x3)\n\nStep 3: Hit Cmd+L or Ctrl+L and ask the chat what the code does\n\nStep 4: To try out cursor on your own projects, go to the file menu (top left) and open a folder.\n*/\n\n\nimport React from 'react';\nimport Canvas from './Canvas';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Test Site</h2>\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}